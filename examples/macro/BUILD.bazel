load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load(":ts_project.bzl", "my_ts_project")

# In your org, my_ts_project can be whatever macro fits your use case, composing swc with other tools
my_ts_project(
    name = "compile",
    srcs = ["in.ts"],
)

write_source_files(
    name = "test",
    # This is a pre-declared output of the "compile" rule, so we can refer to it directly using a Bazel label
    # even though the file itself is generated by Bazel in ../../bazel-bin/examples/macro/in.js
    files = {"expected.js": ":in.js"},
)
