load("@aspect_bazel_lib//lib:testing.bzl", "assert_json_matches")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@aspect_rules_swc//swc:defs.bzl", "swc")

# Specifies a custom location where a debugger should locate source files instead of relative source
# locations. This string is treated verbatim inside the source-map where you can use a path or a URL.
swc(
    name = "compile",
    srcs = ["in.ts"],
    source_maps = True,
    # The custom location can an URL
    source_root = "https://my-website.com/debug/source/",
)

swc(
    name = "compile_subdir",
    srcs = ["src/subdir.ts"],
    root_dir = "src",
    source_maps = True,
    # The custom location can be a path
    source_root = "../../../debug/source",
)

# Assert that the output of "compile" rule matches the expected file.
write_source_files(
    name = "test",
    files = {
        "expected.js": ":in.js",
    },
)

assert_json_matches(
    name = "test_map",
    file1 = "in.js.map",
    file2 = "expected.js.map.golden",
    filter1 = ".sourceRoot,.sources",
    filter2 = ".sourceRoot,.sources",
)

# Assert that the output of "compile_subdir" rule matches the expected file.
write_source_files(
    name = "test_subdir",
    files = {
        "expected_subdir.js": ":subdir.js",
    },
)

assert_json_matches(
    name = "test_subdir_map",
    file1 = "subdir.js.map",
    file2 = "expected_subdir.js.map.golden",
    filter1 = ".sourceRoot,.sources",
    filter2 = ".sourceRoot,.sources",
)
